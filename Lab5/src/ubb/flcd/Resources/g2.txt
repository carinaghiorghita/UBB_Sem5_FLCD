N = { program declaration_list statements declaration var_type identifier expression sign term integer_const statement simple_stmt struct_stmt assignment_stmt input_output_stmt if_stmt while_stmt condition relation }
E = { ; int float long unsigned char string = + - * / % read print ( ) { } == != < > <= >= if else while}
S = program
P = {
    program -> declaration_list statements
    declaration -> var_type identifier = expression | var_type identifier
    var_type -> int | float | long | unsigned | char | string
    expression -> expression sign term | term
    sign -> + | - | * | / | %
    term -> identifier | integer_const
    statements -> statement statements | epsilon
    statement -> simple_stmt | struct_stmt
    simple_stmt -> assignment_stmt | input_output_stmt
    struct_stmt -> if_stmt | while_stmt
    assignment_stmt -> identifier = expression ;
    input_output_stmt -> read ( identifier ) ; | print ( identifier ) ;
    if_stmt -> if ( condition ) { statements } else { statements } | if ( condition ) { statements }
    while_stmt -> while ( condition ) { statements }
    condition -> expression relation expression
    relation -> == | != | < | > | <= | >=
}